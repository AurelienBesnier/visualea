# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(852, 593)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/openalea_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.vboxlayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.vboxlayout.setObjectName("vboxlayout")
        self.splitter_3 = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_3.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_3.setObjectName("splitter_3")
        self.splitter_2 = QtWidgets.QSplitter(self.splitter_3)
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")
        self.tabPackager = QtWidgets.QTabWidget(self.splitter_2)
        self.tabPackager.setObjectName("tabPackager")
        self.packageview = QtWidgets.QWidget()
        self.packageview.setObjectName("packageview")
        self.vboxlayout1 = QtWidgets.QVBoxLayout(self.packageview)
        self.vboxlayout1.setContentsMargins(6, 6, 6, 6)
        self.vboxlayout1.setSpacing(6)
        self.vboxlayout1.setObjectName("vboxlayout1")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/package.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabPackager.addTab(self.packageview, icon1, "")
        self.categoryview = QtWidgets.QWidget()
        self.categoryview.setObjectName("categoryview")
        self.vboxlayout2 = QtWidgets.QVBoxLayout(self.categoryview)
        self.vboxlayout2.setContentsMargins(6, 6, 6, 6)
        self.vboxlayout2.setSpacing(6)
        self.vboxlayout2.setObjectName("vboxlayout2")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/category.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabPackager.addTab(self.categoryview, icon2, "")
        self.searchview = QtWidgets.QWidget()
        self.searchview.setObjectName("searchview")
        self.vboxlayout3 = QtWidgets.QVBoxLayout(self.searchview)
        self.vboxlayout3.setContentsMargins(6, 6, 6, 6)
        self.vboxlayout3.setSpacing(6)
        self.vboxlayout3.setObjectName("vboxlayout3")
        self.search_lineEdit = QtWidgets.QLineEdit(self.searchview)
        self.search_lineEdit.setObjectName("search_lineEdit")
        self.vboxlayout3.addWidget(self.search_lineEdit)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/search.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabPackager.addTab(self.searchview, icon3, "")
        self.poolTabWidget = QtWidgets.QTabWidget(self.splitter_2)
        self.poolTabWidget.setObjectName("poolTabWidget")
        self.pooltab = QtWidgets.QWidget()
        self.pooltab.setObjectName("pooltab")
        self.vboxlayout4 = QtWidgets.QVBoxLayout(self.pooltab)
        self.vboxlayout4.setContentsMargins(6, 6, 6, 6)
        self.vboxlayout4.setSpacing(6)
        self.vboxlayout4.setObjectName("vboxlayout4")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/datapool.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.poolTabWidget.addTab(self.pooltab, icon4, "")
        self.splitter = QtWidgets.QSplitter(self.splitter_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())
        self.splitter.setSizePolicy(sizePolicy)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.tabWorkspace = QtWidgets.QTabWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(3)
        sizePolicy.setHeightForWidth(self.tabWorkspace.sizePolicy().hasHeightForWidth())
        self.tabWorkspace.setSizePolicy(sizePolicy)
        self.tabWorkspace.setObjectName("tabWorkspace")
        self.usetab = QtWidgets.QWidget()
        self.usetab.setObjectName("usetab")
        self.vboxlayout5 = QtWidgets.QVBoxLayout(self.usetab)
        self.vboxlayout5.setContentsMargins(6, 6, 6, 6)
        self.vboxlayout5.setSpacing(6)
        self.vboxlayout5.setObjectName("vboxlayout5")
        self.tabWorkspace.addTab(self.usetab, "")
        self.vboxlayout.addWidget(self.splitter_3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 852, 25))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menu_Export = QtWidgets.QMenu(self.menu_File)
        self.menu_Export.setObjectName("menu_Export")
        self.menuApplication = QtWidgets.QMenu(self.menu_Export)
        self.menuApplication.setObjectName("menuApplication")
        self.menuLast_open = QtWidgets.QMenu(self.menu_File)
        self.menuLast_open.setObjectName("menuLast_open")
        self.menuDataPool = QtWidgets.QMenu(self.menubar)
        self.menuDataPool.setObjectName("menuDataPool")
        self.menu_Help = QtWidgets.QMenu(self.menubar)
        self.menu_Help.setObjectName("menu_Help")
        self.menu_Python = QtWidgets.QMenu(self.menubar)
        self.menu_Python.setObjectName("menu_Python")
        self.menu_Workspace = QtWidgets.QMenu(self.menubar)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_Workspace.setWindowIcon(icon5)
        self.menu_Workspace.setObjectName("menu_Workspace")
        self.menuAlign = QtWidgets.QMenu(self.menu_Workspace)
        self.menuAlign.setObjectName("menuAlign")
        self.menuColour = QtWidgets.QMenu(self.menu_Workspace)
        self.menuColour.setObjectName("menuColour")
        self.menu_Package = QtWidgets.QMenu(self.menubar)
        self.menu_Package.setObjectName("menu_Package")
        self.menuCreate = QtWidgets.QMenu(self.menu_Package)
        self.menuCreate.setObjectName("menuCreate")
        self.menu_Window = QtWidgets.QMenu(self.menubar)
        self.menu_Window.setObjectName("menu_Window")
        MainWindow.setMenuBar(self.menubar)
        self.action_About = QtWidgets.QAction(MainWindow)
        self.action_About.setObjectName("action_About")
        self.action_Help = QtWidgets.QAction(MainWindow)
        self.action_Help.setObjectName("action_Help")
        self.action_Quit = QtWidgets.QAction(MainWindow)
        self.action_Quit.setObjectName("action_Quit")
        self.action_New_Package = QtWidgets.QAction(MainWindow)
        self.action_New_Package.setObjectName("action_New_Package")
        self.actionSystem_Search = QtWidgets.QAction(MainWindow)
        self.actionSystem_Search.setObjectName("actionSystem_Search")
        self.action_Add_File = QtWidgets.QAction(MainWindow)
        self.action_Add_File.setObjectName("action_Add_File")
        self.action_Auto_Search = QtWidgets.QAction(MainWindow)
        self.action_Auto_Search.setObjectName("action_Auto_Search")
        self.action_Close_current_workspace = QtWidgets.QAction(MainWindow)
        self.action_Close_current_workspace.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.action_Close_current_workspace.setObjectName("action_Close_current_workspace")
        self.action_Run = QtWidgets.QAction(MainWindow)
        self.action_Run.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.action_Run.setObjectName("action_Run")
        self.action_New_Network = QtWidgets.QAction(MainWindow)
        self.action_New_Network.setObjectName("action_New_Network")
        self.actionOpenAlea_Web = QtWidgets.QAction(MainWindow)
        self.actionOpenAlea_Web.setObjectName("actionOpenAlea_Web")
        self.action_Execute_script = QtWidgets.QAction(MainWindow)
        self.action_Execute_script.setObjectName("action_Execute_script")
        self.action_New_Session = QtWidgets.QAction(MainWindow)
        self.action_New_Session.setObjectName("action_New_Session")
        self.action_Open_Session = QtWidgets.QAction(MainWindow)
        self.action_Open_Session.setObjectName("action_Open_Session")
        self.action_Save_Session = QtWidgets.QAction(MainWindow)
        self.action_Save_Session.setObjectName("action_Save_Session")
        self.actionSave_as = QtWidgets.QAction(MainWindow)
        self.actionSave_as.setObjectName("actionSave_as")
        self.action_Export_to_Factory = QtWidgets.QAction(MainWindow)
        self.action_Export_to_Factory.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.action_Export_to_Factory.setObjectName("action_Export_to_Factory")
        self.actionExport_to_Application = QtWidgets.QAction(MainWindow)
        self.actionExport_to_Application.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionExport_to_Application.setObjectName("actionExport_to_Application")
        self.actionClear_Data_Pool = QtWidgets.QAction(MainWindow)
        self.actionClear_Data_Pool.setObjectName("actionClear_Data_Pool")
        self.actionFind_Node = QtWidgets.QAction(MainWindow)
        self.actionFind_Node.setObjectName("actionFind_Node")
        self.actionNew_Python_Node = QtWidgets.QAction(MainWindow)
        self.actionNew_Python_Node.setObjectName("actionNew_Python_Node")
        self.actionNew_Package = QtWidgets.QAction(MainWindow)
        self.actionNew_Package.setObjectName("actionNew_Package")
        self.action_EditNode = QtWidgets.QAction(MainWindow)
        self.action_EditNode.setObjectName("action_EditNode")
        self.actionShow_Pool = QtWidgets.QAction(MainWindow)
        self.actionShow_Pool.setObjectName("actionShow_Pool")
        self.action_OpenNode = QtWidgets.QAction(MainWindow)
        self.action_OpenNode.setObjectName("action_OpenNode")
        self.action_Delete_2 = QtWidgets.QAction(MainWindow)
        self.action_Delete_2.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.action_Delete_2.setObjectName("action_Delete_2")
        self.action_New_Empty_Workspace = QtWidgets.QAction(MainWindow)
        self.action_New_Empty_Workspace.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.action_New_Empty_Workspace.setObjectName("action_New_Empty_Workspace")
        self.actionReload_from_Model = QtWidgets.QAction(MainWindow)
        self.actionReload_from_Model.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionReload_from_Model.setObjectName("actionReload_from_Model")
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionConfigure_I_O = QtWidgets.QAction(MainWindow)
        self.actionConfigure_I_O.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionConfigure_I_O.setObjectName("actionConfigure_I_O")
        self.actionGroup_Selection = QtWidgets.QAction(MainWindow)
        self.actionGroup_Selection.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionGroup_Selection.setObjectName("actionGroup_Selection")
        self.actionOpen_Console = QtWidgets.QAction(MainWindow)
        self.actionOpen_Console.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionOpen_Console.setObjectName("actionOpen_Console")
        self.action_Copy = QtWidgets.QAction(MainWindow)
        self.action_Copy.setShortcutContext(QtCore.Qt.WidgetShortcut)
        self.action_Copy.setObjectName("action_Copy")
        self.action_Paste = QtWidgets.QAction(MainWindow)
        self.action_Paste.setShortcutContext(QtCore.Qt.WidgetShortcut)
        self.action_Paste.setObjectName("action_Paste")
        self.action_Cut = QtWidgets.QAction(MainWindow)
        self.action_Cut.setShortcutContext(QtCore.Qt.WidgetShortcut)
        self.action_Cut.setObjectName("action_Cut")
        self.actionReset = QtWidgets.QAction(MainWindow)
        self.actionReset.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionReset.setObjectName("actionReset")
        self.actionPreview_Application = QtWidgets.QAction(MainWindow)
        self.actionPreview_Application.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionPreview_Application.setObjectName("actionPreview_Application")
        self.actionLeft_Panel = QtWidgets.QAction(MainWindow)
        self.actionLeft_Panel.setObjectName("actionLeft_Panel")
        self.actionWorkspaces = QtWidgets.QAction(MainWindow)
        self.actionWorkspaces.setObjectName("actionWorkspaces")
        self.actionDisplay_Package_Manager = QtWidgets.QAction(MainWindow)
        self.actionDisplay_Package_Manager.setCheckable(True)
        self.actionDisplay_Package_Manager.setChecked(True)
        self.actionDisplay_Package_Manager.setObjectName("actionDisplay_Package_Manager")
        self.actionDisplay_Workspaces = QtWidgets.QAction(MainWindow)
        self.actionDisplay_Workspaces.setCheckable(True)
        self.actionDisplay_Workspaces.setChecked(True)
        self.actionDisplay_Workspaces.setObjectName("actionDisplay_Workspaces")
        self.actionInvalidate = QtWidgets.QAction(MainWindow)
        self.actionInvalidate.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionInvalidate.setObjectName("actionInvalidate")
        self.actionClea_r_Console = QtWidgets.QAction(MainWindow)
        self.actionClea_r_Console.setObjectName("actionClea_r_Console")
        self.action_Image = QtWidgets.QAction(MainWindow)
        self.action_Image.setObjectName("action_Image")
        self.action_Svg = QtWidgets.QAction(MainWindow)
        self.action_Svg.setObjectName("action_Svg")
        self.action_Application = QtWidgets.QAction(MainWindow)
        self.action_Application.setObjectName("action_Application")
        self.action_Data_File = QtWidgets.QAction(MainWindow)
        self.action_Data_File.setObjectName("action_Data_File")
        self.actionShow_log = QtWidgets.QAction(MainWindow)
        self.actionShow_log.setObjectName("actionShow_log")
        self.actionAlignHorizontally = QtWidgets.QAction(MainWindow)
        self.actionAlignHorizontally.setObjectName("actionAlignHorizontally")
        self.actionAlignLeft = QtWidgets.QAction(MainWindow)
        self.actionAlignLeft.setObjectName("actionAlignLeft")
        self.actionAlignRight = QtWidgets.QAction(MainWindow)
        self.actionAlignRight.setObjectName("actionAlignRight")
        self.actionAlignMean = QtWidgets.QAction(MainWindow)
        self.actionAlignMean.setObjectName("actionAlignMean")
        self.actionSetCustomColor = QtWidgets.QAction(MainWindow)
        self.actionSetCustomColor.setObjectName("actionSetCustomColor")
        self.actionUseCustomColor = QtWidgets.QAction(MainWindow)
        self.actionUseCustomColor.setCheckable(True)
        self.actionUseCustomColor.setObjectName("actionUseCustomColor")
        self.actionDistributeHorizontally = QtWidgets.QAction(MainWindow)
        self.actionDistributeHorizontally.setObjectName("actionDistributeHorizontally")
        self.actionDistributeVertically = QtWidgets.QAction(MainWindow)
        self.actionDistributeVertically.setObjectName("actionDistributeVertically")
        self.actionTo_script = QtWidgets.QAction(MainWindow)
        self.actionTo_script.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionTo_script.setObjectName("actionTo_script")
        self.actionGf = QtWidgets.QAction(MainWindow)
        self.actionGf.setObjectName("actionGf")
        self.menuApplication.addAction(self.actionPreview_Application)
        self.menuApplication.addAction(self.actionExport_to_Application)
        self.menu_Export.addAction(self.menuApplication.menuAction())
        self.menu_Export.addAction(self.actionTo_script)
        self.menu_Export.addSeparator()
        self.menu_Export.addAction(self.action_Image)
        self.menu_Export.addAction(self.action_Svg)
        self.menu_File.addAction(self.action_New_Empty_Workspace)
        self.menu_File.addAction(self.menuLast_open.menuAction())
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Export_to_Factory)
        self.menu_File.addAction(self.action_Close_current_workspace)
        self.menu_File.addAction(self.actionReload_from_Model)
        self.menu_File.addAction(self.menu_Export.menuAction())
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Quit)
        self.menuDataPool.addAction(self.actionClear_Data_Pool)
        self.menu_Help.addAction(self.action_Help)
        self.menu_Help.addSeparator()
        self.menu_Help.addAction(self.action_About)
        self.menu_Help.addAction(self.actionOpenAlea_Web)
        self.menu_Python.addAction(self.action_Execute_script)
        self.menu_Python.addAction(self.actionOpen_Console)
        self.menu_Python.addAction(self.actionClea_r_Console)
        self.menuAlign.addAction(self.actionAlignHorizontally)
        self.menuAlign.addAction(self.actionAlignLeft)
        self.menuAlign.addAction(self.actionAlignRight)
        self.menuAlign.addAction(self.actionAlignMean)
        self.menuAlign.addAction(self.actionDistributeHorizontally)
        self.menuAlign.addAction(self.actionDistributeVertically)
        self.menuColour.addAction(self.actionSetCustomColor)
        self.menuColour.addAction(self.actionUseCustomColor)
        self.menu_Workspace.addAction(self.action_Run)
        self.menu_Workspace.addAction(self.actionInvalidate)
        self.menu_Workspace.addAction(self.actionReset)
        self.menu_Workspace.addAction(self.actionConfigure_I_O)
        self.menu_Workspace.addSeparator()
        self.menu_Workspace.addAction(self.actionGroup_Selection)
        self.menu_Workspace.addAction(self.action_Copy)
        self.menu_Workspace.addAction(self.action_Cut)
        self.menu_Workspace.addAction(self.action_Paste)
        self.menu_Workspace.addAction(self.action_Delete_2)
        self.menu_Workspace.addSeparator()
        self.menu_Workspace.addAction(self.menuAlign.menuAction())
        self.menu_Workspace.addAction(self.menuColour.menuAction())
        self.menuCreate.addAction(self.actionNew_Package)
        self.menuCreate.addAction(self.action_New_Network)
        self.menuCreate.addAction(self.actionNew_Python_Node)
        self.menuCreate.addAction(self.action_Data_File)
        self.menu_Package.addAction(self.action_Add_File)
        self.menu_Package.addAction(self.action_Auto_Search)
        self.menu_Package.addAction(self.actionFind_Node)
        self.menu_Package.addSeparator()
        self.menu_Package.addAction(self.menuCreate.menuAction())
        self.menu_Package.addSeparator()
        self.menu_Package.addAction(self.actionShow_log)
        self.menu_Window.addAction(self.actionDisplay_Package_Manager)
        self.menu_Window.addAction(self.actionDisplay_Workspaces)
        self.menu_Window.addSeparator()
        self.menu_Window.addAction(self.actionPreferences)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Package.menuAction())
        self.menubar.addAction(self.menuDataPool.menuAction())
        self.menubar.addAction(self.menu_Workspace.menuAction())
        self.menubar.addAction(self.menu_Python.menuAction())
        self.menubar.addAction(self.menu_Window.menuAction())
        self.menubar.addAction(self.menu_Help.menuAction())

        self.retranslateUi(MainWindow)
        self.tabPackager.setCurrentIndex(0)
        self.poolTabWidget.setCurrentIndex(0)
        self.tabWorkspace.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "VisuAlea"))
        self.tabPackager.setTabText(self.tabPackager.indexOf(self.packageview), _translate("MainWindow", "Package"))
        self.tabPackager.setTabText(self.tabPackager.indexOf(self.categoryview), _translate("MainWindow", "Category"))
        self.tabPackager.setTabText(self.tabPackager.indexOf(self.searchview), _translate("MainWindow", "Search"))
        self.poolTabWidget.setTabText(self.poolTabWidget.indexOf(self.pooltab), _translate("MainWindow", "DataPool"))
        self.tabWorkspace.setTabText(self.tabWorkspace.indexOf(self.usetab), _translate("MainWindow", "Root"))
        self.menu_File.setTitle(_translate("MainWindow", "&File"))
        self.menu_Export.setTitle(_translate("MainWindow", "&Export"))
        self.menuApplication.setTitle(_translate("MainWindow", "Application"))
        self.menuLast_open.setTitle(_translate("MainWindow", "Open recent"))
        self.menuDataPool.setTitle(_translate("MainWindow", "&DataPool"))
        self.menu_Help.setTitle(_translate("MainWindow", "&Help"))
        self.menu_Python.setTitle(_translate("MainWindow", "P&ython"))
        self.menu_Workspace.setTitle(_translate("MainWindow", "&Workspace"))
        self.menuAlign.setTitle(_translate("MainWindow", "Align"))
        self.menuColour.setTitle(_translate("MainWindow", "Color"))
        self.menu_Package.setTitle(_translate("MainWindow", "&Package Manager"))
        self.menuCreate.setTitle(_translate("MainWindow", "&Add"))
        self.menu_Window.setTitle(_translate("MainWindow", "&Window"))
        self.action_About.setText(_translate("MainWindow", "&About"))
        self.action_Help.setText(_translate("MainWindow", "&Help"))
        self.action_Help.setShortcut(_translate("MainWindow", "F1"))
        self.action_Quit.setText(_translate("MainWindow", "&Quit"))
        self.action_Quit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.action_New_Package.setText(_translate("MainWindow", "&Create Package"))
        self.action_New_Package.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionSystem_Search.setText(_translate("MainWindow", "System &Search"))
        self.action_Add_File.setText(_translate("MainWindow", "&Load Package/Directory"))
        self.action_Auto_Search.setText(_translate("MainWindow", "&Reload All packages"))
        self.action_Close_current_workspace.setText(_translate("MainWindow", "Close Current Workspace"))
        self.action_Close_current_workspace.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.action_Run.setText(_translate("MainWindow", "&Run "))
        self.action_Run.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.action_New_Network.setText(_translate("MainWindow", "&Composite Node"))
        self.actionOpenAlea_Web.setText(_translate("MainWindow", "OpenAlea Web"))
        self.action_Execute_script.setText(_translate("MainWindow", "&Execute script"))
        self.action_New_Session.setText(_translate("MainWindow", "&New Session"))
        self.action_New_Session.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.action_Open_Session.setText(_translate("MainWindow", "&Open Session"))
        self.action_Open_Session.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_Save_Session.setText(_translate("MainWindow", "&Save Session"))
        self.action_Save_Session.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_as.setText(_translate("MainWindow", "Save &as"))
        self.action_Export_to_Factory.setText(_translate("MainWindow", "&Save as Composite Node"))
        self.action_Export_to_Factory.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionExport_to_Application.setText(_translate("MainWindow", "Export to Application"))
        self.actionClear_Data_Pool.setText(_translate("MainWindow", "Clear Data Pool"))
        self.actionFind_Node.setText(_translate("MainWindow", "&Find Node"))
        self.actionFind_Node.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionNew_Python_Node.setText(_translate("MainWindow", "Python &Node"))
        self.actionNew_Package.setText(_translate("MainWindow", "&Package"))
        self.action_EditNode.setText(_translate("MainWindow", "&Edit"))
        self.actionShow_Pool.setText(_translate("MainWindow", "Show Pool"))
        self.actionShow_Pool.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.action_OpenNode.setText(_translate("MainWindow", "&Open"))
        self.action_Delete_2.setText(_translate("MainWindow", "&Delete"))
        self.action_New_Empty_Workspace.setText(_translate("MainWindow", "&New Empty Workspace"))
        self.action_New_Empty_Workspace.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionReload_from_Model.setText(_translate("MainWindow", "Reload"))
        self.actionReload_from_Model.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionPreferences.setText(_translate("MainWindow", "Preferences"))
        self.actionConfigure_I_O.setText(_translate("MainWindow", "Configure I/O"))
        self.actionGroup_Selection.setText(_translate("MainWindow", "Group"))
        self.actionGroup_Selection.setShortcut(_translate("MainWindow", "Ctrl+G"))
        self.actionOpen_Console.setText(_translate("MainWindow", "Open &shell"))
        self.actionOpen_Console.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.action_Copy.setText(_translate("MainWindow", "Copy"))
        self.action_Copy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.action_Paste.setText(_translate("MainWindow", "&Paste"))
        self.action_Paste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.action_Cut.setText(_translate("MainWindow", "Cut"))
        self.action_Cut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionReset.setText(_translate("MainWindow", "Reset"))
        self.actionReset.setShortcut(_translate("MainWindow", "Ctrl+K"))
        self.actionPreview_Application.setText(_translate("MainWindow", "Preview Application"))
        self.actionLeft_Panel.setText(_translate("MainWindow", "Package Manager"))
        self.actionWorkspaces.setText(_translate("MainWindow", "Workspaces"))
        self.actionDisplay_Package_Manager.setText(_translate("MainWindow", "Display Package Manager"))
        self.actionDisplay_Workspaces.setText(_translate("MainWindow", "Display Workspaces"))
        self.actionInvalidate.setText(_translate("MainWindow", "Invalidate"))
        self.actionInvalidate.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actionClea_r_Console.setText(_translate("MainWindow", "&Clear shell"))
        self.action_Image.setText(_translate("MainWindow", "&Image"))
        self.action_Svg.setText(_translate("MainWindow", "&Svg"))
        self.action_Application.setText(_translate("MainWindow", "&Application"))
        self.action_Data_File.setText(_translate("MainWindow", "&Data File"))
        self.actionShow_log.setText(_translate("MainWindow", "Show log"))
        self.actionAlignHorizontally.setText(_translate("MainWindow", "Align Horizontally"))
        self.actionAlignLeft.setText(_translate("MainWindow", "Align Left"))
        self.actionAlignRight.setText(_translate("MainWindow", "Align Right"))
        self.actionAlignMean.setText(_translate("MainWindow", "Align Mean"))
        self.actionSetCustomColor.setText(_translate("MainWindow", "Set Custom Color..."))
        self.actionSetCustomColor.setToolTip(_translate("MainWindow", "Set Custom Colour"))
        self.actionUseCustomColor.setText(_translate("MainWindow", "Use Custom Color"))
        self.actionUseCustomColor.setToolTip(_translate("MainWindow", "Use Custom Color"))
        self.actionDistributeHorizontally.setText(_translate("MainWindow", "Distribute Horizontally"))
        self.actionDistributeVertically.setText(_translate("MainWindow", "Distribute Vertically"))
        self.actionDistributeVertically.setToolTip(_translate("MainWindow", "DistributeVertically"))
        self.actionTo_script.setText(_translate("MainWindow", "Script"))
        self.actionGf.setText(_translate("MainWindow", "gf"))
from openalea.visualea import images_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
